create event servers premade to an event, with a marketplace
allow players to run this server locally and share it with ngrok or tunnel



tests:
check if ngrok works simultaniously on mulktiple macheineas


<style>
main {
    height:50vh;
    width: 50vw;
    background-color: aqua;
}
</style>

<!--
    calc([min size]px + ([max size] — [min size]) * ((100vw — [min vw width]px) / ([max vw width] — [min vw width])))
-->


// const onChange = (the) => {
    //     version = the.currentTarget.value
    //     console.log("happened")
    //     if (versionsList.includes(version)) style = "correct"
    //     else style = "incorrect"
    // }

    <input type=range on:change={onChange} bind:value={version} min=8 max=19>

    <h1>Choose a version:</h1>
    <p>1.{version}</p>
    <button class = {style}>
        {version}
    </button>

    button {
    border-radius: 5px;
    float: right;
    text-align: center;
    padding:15px;
    -webkit-app-region: no-drag;
}
.neutral {
    background: #f4f4f4;
}
.incorrect {
    background: #ba1818;
}
.correct {
    background: #09ee28;
}





// index.js

// const download = require('download');
// const exec = require('child_process').execFile;
// const url = require("url")
// const fs = require('fs');
// const platform = process.platform; 
// const appFolder = app.getPath("appData")
// let file = 'https://github.com/AarushX/DerivativeMC/releases/download/1.19/HPFS_Setup.exe';
// let parsed = url.parse(file);
// let fileName = decodeURIComponent(path.basename(parsed.pathname))
// let filePath = `${__dirname}/tmp/`; 
// download(file,filePath)
// .then(
//     () => {
//         fs.rename("electron/tmp/"+fileName, "electron/tmp/"+"setup.exe", function(err) {
//             if ( err ) console.log('ERROR: ' + err);
//         });
//         exec("electron/tmp/"+fileName, 
//             function(err, data) { 
//                 console.log(err)
//                 console.log(data.toString());                       
//             }
//         );  
//     }
// )
// const install = () => exec(path.join(__dirname, "../../1.19/run.bat"), function(err, data) { console.log(err); console.log(data.toString());})


"dev": "vite",
    "build": "vite build",
    "preview": "vite preview",
    "check": "svelte-check --tsconfig ./tsconfig.json",
    "start": "electron-forge start",
    "package": "electron-forge package",
    "make": "electron-forge make"

// import sveltePreprocess from 'svelte-preprocess'

// export default {
//   // Consult https://github.com/sveltejs/svelte-preprocess
//   // for more information about preprocessors
//   preprocess: sveltePreprocess()
// }

\"npm run electron:dev\"